[2023-04-11 22:56:55] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:34)"} []
[2023-04-11 22:56:55] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:89)"} []
[2023-04-11 22:56:55] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:112)"} []
[2023-04-11 22:56:55] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:129)"} []
[2023-04-11 22:56:55] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:69)"} []
[2023-04-11 22:56:55] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:91)"} []
[2023-04-11 22:56:55] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:99)"} []
[2023-04-11 22:56:55] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:54)"} []
[2023-04-11 22:56:55] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:41)"} []
[2023-04-11 22:56:55] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:49)"} []
[2023-04-11 22:56:55] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:57)"} []
[2023-04-11 22:56:55] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:65)"} []
[2023-04-11 22:56:55] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:73)"} []
[2023-04-11 22:56:55] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:81)"} []
[2023-04-11 22:56:55] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:89)"} []
[2023-04-11 22:56:55] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:97)"} []
[2023-04-11 22:56:55] php.INFO: Deprecated: Return type of Symfony\Component\Routing\RouteCollection::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Routing\\RouteCollection::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\routing\\RouteCollection.php:54)"} []
[2023-04-11 22:56:55] php.INFO: Deprecated: Return type of Symfony\Component\Routing\RouteCollection::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Routing\\RouteCollection::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\routing\\RouteCollection.php:64)"} []
[2023-04-11 22:56:55] php.INFO: Deprecated: Return type of Symfony\Component\Config\Resource\GlobResource::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\Config\\Resource\\GlobResource::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\config\\Resource\\GlobResource.php:108)"} []
[2023-04-11 22:56:55] php.INFO: Deprecated: DateTime::__construct(): Passing null to parameter #1 ($datetime) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: DateTime::__construct(): Passing null to parameter #1 ($datetime) of type string is deprecated at C:\\xampp\\htdocs\\Web\\vendor\\monolog\\monolog\\src\\Monolog\\Logger.php:324)"} []
[2023-04-11 22:56:55] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8001/","method":"GET"} []
[2023-04-11 22:56:55] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:134)"} []
[2023-04-11 22:56:55] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:144)"} []
[2023-04-11 22:56:55] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Session.php:129)"} []
[2023-04-11 22:56:55] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Session.php:139)"} []
[2023-04-11 22:56:55] php.INFO: Deprecated: DateTime::__construct(): Passing null to parameter #1 ($datetime) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: DateTime::__construct(): Passing null to parameter #1 ($datetime) of type string is deprecated at C:\\xampp\\htdocs\\Web\\vendor\\monolog\\monolog\\src\\Monolog\\Logger.php:324)"} []
[2023-04-11 22:56:55] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2023-04-11 22:56:55] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOConnection::exec($sql) should either be compatible with PDO::exec(string $statement): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOConnection::exec($sql) should either be compatible with PDO::exec(string $statement): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:50)"} []
[2023-04-11 22:56:55] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOConnection::lastInsertId($name = null) should either be compatible with PDO::lastInsertId(?string $name = null): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOConnection::lastInsertId($name = null) should either be compatible with PDO::lastInsertId(?string $name = null): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:99)"} []
[2023-04-11 22:56:55] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOConnection::prepare($sql, $driverOptions = []) should either be compatible with PDO::prepare(string $query, array $options = []): PDOStatement|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOConnection::prepare($sql, $driverOptions = []) should either be compatible with PDO::prepare(string $query, array $options = []): PDOStatement|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:76)"} []
[2023-04-11 22:56:55] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOConnection::quote($value, $type = Doctrine\DBAL\ParameterType::STRING) should either be compatible with PDO::quote(string $string, int $type = PDO::PARAM_STR): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOConnection::quote($value, $type = Doctrine\\DBAL\\ParameterType::STRING) should either be compatible with PDO::quote(string $string, int $type = PDO::PARAM_STR): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOConnection.php:91)"} []
[2023-04-11 22:56:55] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOQueryImplementation::query(?string $query = null, ?int $fetchMode = null, mixed ...$fetchModeArgs) should either be compatible with PDO::query(string $query, ?int $fetchMode = null, mixed ...$fetchModeArgs): PDOStatement|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOQueryImplementation::query(?string $query = null, ?int $fetchMode = null, mixed ...$fetchModeArgs) should either be compatible with PDO::query(string $query, ?int $fetchMode = null, mixed ...$fetchModeArgs): PDOStatement|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOQueryImplementation.php:20)"} []
[2023-04-11 22:56:55] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::bindParam($param, &$variable, $type = Doctrine\DBAL\ParameterType::STRING, $length = null, $driverOptions = null) should either be compatible with PDOStatement::bindParam(string|int $param, mixed &$var, int $type = PDO::PARAM_STR, int $maxLength = 0, mixed $driverOptions = null): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::bindParam($param, &$variable, $type = Doctrine\\DBAL\\ParameterType::STRING, $length = null, $driverOptions = null) should either be compatible with PDOStatement::bindParam(string|int $param, mixed &$var, int $type = PDO::PARAM_STR, int $maxLength = 0, mixed $driverOptions = null): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:79)"} []
[2023-04-11 22:56:55] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::bindValue($param, $value, $type = Doctrine\DBAL\ParameterType::STRING) should either be compatible with PDOStatement::bindValue(string|int $param, mixed $value, int $type = PDO::PARAM_STR): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::bindValue($param, $value, $type = Doctrine\\DBAL\\ParameterType::STRING) should either be compatible with PDOStatement::bindValue(string|int $param, mixed $value, int $type = PDO::PARAM_STR): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:59)"} []
[2023-04-11 22:56:55] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::closeCursor() should either be compatible with PDOStatement::closeCursor(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::closeCursor() should either be compatible with PDOStatement::closeCursor(): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:95)"} []
[2023-04-11 22:56:55] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::execute($params = null) should either be compatible with PDOStatement::execute(?array $params = null): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::execute($params = null) should either be compatible with PDOStatement::execute(?array $params = null): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:109)"} []
[2023-04-11 22:56:55] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::fetch($fetchMode = null, $cursorOrientation = PDO::FETCH_ORI_NEXT, $cursorOffset = 0) should either be compatible with PDOStatement::fetch(int $mode = PDO::FETCH_DEFAULT, int $cursorOrientation = PDO::FETCH_ORI_NEXT, int $cursorOffset = 0): mixed, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::fetch($fetchMode = null, $cursorOrientation = PDO::FETCH_ORI_NEXT, $cursorOffset = 0) should either be compatible with PDOStatement::fetch(int $mode = PDO::FETCH_DEFAULT, int $cursorOrientation = PDO::FETCH_ORI_NEXT, int $cursorOffset = 0): mixed, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:123)"} []
[2023-04-11 22:56:55] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatement::fetchColumn($columnIndex = 0) should either be compatible with PDOStatement::fetchColumn(int $column = 0): mixed, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatement::fetchColumn($columnIndex = 0) should either be compatible with PDOStatement::fetchColumn(int $column = 0): mixed, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatement.php:143)"} []
[2023-04-11 22:56:55] php.INFO: Deprecated: Return type of Doctrine\DBAL\Driver\PDOStatementImplementations::fetchAll($mode = null, ...$args) should either be compatible with PDOStatement::fetchAll(int $mode = PDO::FETCH_DEFAULT, mixed ...$args): array, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Doctrine\\DBAL\\Driver\\PDOStatementImplementations::fetchAll($mode = null, ...$args) should either be compatible with PDOStatement::fetchAll(int $mode = PDO::FETCH_DEFAULT, mixed ...$args): array, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\doctrine\\dbal\\lib\\Doctrine\\DBAL\\Driver\\PDOStatementImplementations.php:36)"} []
[2023-04-11 22:56:55] php.INFO: Deprecated: DateTime::__construct(): Passing null to parameter #1 ($datetime) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: DateTime::__construct(): Passing null to parameter #1 ($datetime) of type string is deprecated at C:\\xampp\\htdocs\\Web\\vendor\\monolog\\monolog\\src\\Monolog\\Logger.php:324)"} []
[2023-04-11 22:56:55] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2023-04-11 22:56:55] php.INFO: Deprecated: DateTime::__construct(): Passing null to parameter #1 ($datetime) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: DateTime::__construct(): Passing null to parameter #1 ($datetime) of type string is deprecated at C:\\xampp\\htdocs\\Web\\vendor\\monolog\\monolog\\src\\Monolog\\Logger.php:324)"} []
[2023-04-11 22:56:55] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2023-04-11 22:56:55] php.INFO: Deprecated: DateTime::__construct(): Passing null to parameter #1 ($datetime) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: DateTime::__construct(): Passing null to parameter #1 ($datetime) of type string is deprecated at C:\\xampp\\htdocs\\Web\\vendor\\monolog\\monolog\\src\\Monolog\\Logger.php:324)"} []
[2023-04-11 22:56:55] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2023-04-11 22:56:55] php.INFO: Deprecated: DateTime::__construct(): Passing null to parameter #1 ($datetime) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: DateTime::__construct(): Passing null to parameter #1 ($datetime) of type string is deprecated at C:\\xampp\\htdocs\\Web\\vendor\\monolog\\monolog\\src\\Monolog\\Logger.php:324)"} []
[2023-04-11 22:56:55] request.CRITICAL: Uncaught PHP Exception ReflectionException: "Class "App\Entity\Publicity" does not exist" at C:\xampp\htdocs\Web\vendor\doctrine\persistence\lib\Doctrine\Persistence\AbstractManagerRegistry.php line 167 {"exception":"[object] (ReflectionException(code: -1): Class \"App\\Entity\\Publicity\" does not exist at C:\\xampp\\htdocs\\Web\\vendor\\doctrine\\persistence\\lib\\Doctrine\\Persistence\\AbstractManagerRegistry.php:167)"} []
[2023-04-11 22:56:55] php.INFO: Deprecated: Return type of Twig\Node\Node::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Twig\\Node\\Node::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\twig\\twig\\src\\Node\\Node.php:151)"} []
[2023-04-11 22:57:07] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:34)"} []
[2023-04-11 22:57:07] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:89)"} []
[2023-04-11 22:57:07] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:112)"} []
[2023-04-11 22:57:07] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:129)"} []
[2023-04-11 22:57:07] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:69)"} []
[2023-04-11 22:57:07] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:91)"} []
[2023-04-11 22:57:07] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:99)"} []
[2023-04-11 22:57:07] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:54)"} []
[2023-04-11 22:57:07] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:41)"} []
[2023-04-11 22:57:07] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:49)"} []
[2023-04-11 22:57:07] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:57)"} []
[2023-04-11 22:57:07] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:65)"} []
[2023-04-11 22:57:07] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:73)"} []
[2023-04-11 22:57:07] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:81)"} []
[2023-04-11 22:57:07] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:89)"} []
[2023-04-11 22:57:07] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:97)"} []
[2023-04-11 22:57:07] php.INFO: Deprecated: DateTime::__construct(): Passing null to parameter #1 ($datetime) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: DateTime::__construct(): Passing null to parameter #1 ($datetime) of type string is deprecated at C:\\xampp\\htdocs\\Web\\vendor\\monolog\\monolog\\src\\Monolog\\Logger.php:324)"} []
[2023-04-11 22:57:07] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8001/","method":"GET"} []
[2023-04-11 22:57:07] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:134)"} []
[2023-04-11 22:57:07] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:144)"} []
[2023-04-11 22:57:07] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Session.php:129)"} []
[2023-04-11 22:57:07] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Session.php:139)"} []
[2023-04-11 22:57:07] php.INFO: Deprecated: DateTime::__construct(): Passing null to parameter #1 ($datetime) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: DateTime::__construct(): Passing null to parameter #1 ($datetime) of type string is deprecated at C:\\xampp\\htdocs\\Web\\vendor\\monolog\\monolog\\src\\Monolog\\Logger.php:324)"} []
[2023-04-11 22:57:07] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2023-04-11 22:57:07] php.INFO: Deprecated: DateTime::__construct(): Passing null to parameter #1 ($datetime) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: DateTime::__construct(): Passing null to parameter #1 ($datetime) of type string is deprecated at C:\\xampp\\htdocs\\Web\\vendor\\monolog\\monolog\\src\\Monolog\\Logger.php:324)"} []
[2023-04-11 22:57:07] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2023-04-11 22:57:07] php.INFO: Deprecated: DateTime::__construct(): Passing null to parameter #1 ($datetime) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: DateTime::__construct(): Passing null to parameter #1 ($datetime) of type string is deprecated at C:\\xampp\\htdocs\\Web\\vendor\\monolog\\monolog\\src\\Monolog\\Logger.php:324)"} []
[2023-04-11 22:57:07] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2023-04-11 22:57:07] php.INFO: Deprecated: DateTime::__construct(): Passing null to parameter #1 ($datetime) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: DateTime::__construct(): Passing null to parameter #1 ($datetime) of type string is deprecated at C:\\xampp\\htdocs\\Web\\vendor\\monolog\\monolog\\src\\Monolog\\Logger.php:324)"} []
[2023-04-11 22:57:07] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2023-04-11 22:57:07] php.INFO: Deprecated: DateTime::__construct(): Passing null to parameter #1 ($datetime) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: DateTime::__construct(): Passing null to parameter #1 ($datetime) of type string is deprecated at C:\\xampp\\htdocs\\Web\\vendor\\monolog\\monolog\\src\\Monolog\\Logger.php:324)"} []
[2023-04-11 22:57:07] request.CRITICAL: Uncaught PHP Exception ReflectionException: "Class "App\Entity\Publicity" does not exist" at C:\xampp\htdocs\Web\vendor\doctrine\persistence\lib\Doctrine\Persistence\AbstractManagerRegistry.php line 167 {"exception":"[object] (ReflectionException(code: -1): Class \"App\\Entity\\Publicity\" does not exist at C:\\xampp\\htdocs\\Web\\vendor\\doctrine\\persistence\\lib\\Doctrine\\Persistence\\AbstractManagerRegistry.php:167)"} []
[2023-04-11 22:58:11] console.CRITICAL: Error thrown while running command ""schema:update" --force". Message: "There are no commands defined in the "schema" namespace.  Did you mean this?     doctrine:schema" {"exception":"[object] (Symfony\\Component\\Console\\Exception\\NamespaceNotFoundException(code: 0): There are no commands defined in the \"schema\" namespace.\n\nDid you mean this?\n    doctrine:schema at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\console\\Application.php:604)","command":"\"schema:update\" --force","message":"There are no commands defined in the \"schema\" namespace.\n\nDid you mean this?\n    doctrine:schema"} []
[2023-04-11 22:58:34] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:34)"} []
[2023-04-11 22:58:34] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:89)"} []
[2023-04-11 22:58:34] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:112)"} []
[2023-04-11 22:58:34] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:129)"} []
[2023-04-11 22:58:34] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\AbstractSessionHandler::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\AbstractSessionHandler.php:69)"} []
[2023-04-11 22:58:34] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:91)"} []
[2023-04-11 22:58:34] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:99)"} []
[2023-04-11 22:58:34] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\StrictSessionHandler::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Handler\\StrictSessionHandler.php:54)"} []
[2023-04-11 22:58:34] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::open($savePath, $sessionName) should either be compatible with SessionHandlerInterface::open(string $path, string $name): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:41)"} []
[2023-04-11 22:58:34] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::close() should either be compatible with SessionHandlerInterface::close(): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:49)"} []
[2023-04-11 22:58:34] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::read($sessionId) should either be compatible with SessionHandlerInterface::read(string $id): string|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:57)"} []
[2023-04-11 22:58:34] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::write($sessionId, $data) should either be compatible with SessionHandlerInterface::write(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:65)"} []
[2023-04-11 22:58:34] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::destroy($sessionId) should either be compatible with SessionHandlerInterface::destroy(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:73)"} []
[2023-04-11 22:58:34] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::gc($maxlifetime) should either be compatible with SessionHandlerInterface::gc(int $max_lifetime): int|false, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:81)"} []
[2023-04-11 22:58:34] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::validateId($sessionId) should either be compatible with SessionUpdateTimestampHandlerInterface::validateId(string $id): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:89)"} []
[2023-04-11 22:58:34] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Storage\Proxy\SessionHandlerProxy::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Storage\\Proxy\\SessionHandlerProxy::updateTimestamp($sessionId, $data) should either be compatible with SessionUpdateTimestampHandlerInterface::updateTimestamp(string $id, string $data): bool, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Storage\\Proxy\\SessionHandlerProxy.php:97)"} []
[2023-04-11 22:58:34] php.INFO: Deprecated: DateTime::__construct(): Passing null to parameter #1 ($datetime) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: DateTime::__construct(): Passing null to parameter #1 ($datetime) of type string is deprecated at C:\\xampp\\htdocs\\Web\\vendor\\monolog\\monolog\\src\\Monolog\\Logger.php:324)"} []
[2023-04-11 22:58:34] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\HomeController::index"},"request_uri":"http://localhost:8001/","method":"GET"} []
[2023-04-11 22:58:34] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:134)"} []
[2023-04-11 22:58:34] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Attribute\\AttributeBag.php:144)"} []
[2023-04-11 22:58:34] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Session.php:129)"} []
[2023-04-11 22:58:34] php.INFO: Deprecated: Return type of Symfony\Component\HttpFoundation\Session\Session::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice {"exception":"[object] (ErrorException(code: 0): Deprecated: Return type of Symfony\\Component\\HttpFoundation\\Session\\Session::count() should either be compatible with Countable::count(): int, or the #[\\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice at C:\\xampp\\htdocs\\Web\\vendor\\symfony\\http-foundation\\Session\\Session.php:139)"} []
[2023-04-11 22:58:34] php.INFO: Deprecated: DateTime::__construct(): Passing null to parameter #1 ($datetime) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: DateTime::__construct(): Passing null to parameter #1 ($datetime) of type string is deprecated at C:\\xampp\\htdocs\\Web\\vendor\\monolog\\monolog\\src\\Monolog\\Logger.php:324)"} []
[2023-04-11 22:58:34] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2023-04-11 22:58:34] php.INFO: Deprecated: DateTime::__construct(): Passing null to parameter #1 ($datetime) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: DateTime::__construct(): Passing null to parameter #1 ($datetime) of type string is deprecated at C:\\xampp\\htdocs\\Web\\vendor\\monolog\\monolog\\src\\Monolog\\Logger.php:324)"} []
[2023-04-11 22:58:34] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2023-04-11 22:58:34] php.INFO: Deprecated: DateTime::__construct(): Passing null to parameter #1 ($datetime) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: DateTime::__construct(): Passing null to parameter #1 ($datetime) of type string is deprecated at C:\\xampp\\htdocs\\Web\\vendor\\monolog\\monolog\\src\\Monolog\\Logger.php:324)"} []
[2023-04-11 22:58:34] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginAuthenticator"} []
[2023-04-11 22:58:34] php.INFO: Deprecated: DateTime::__construct(): Passing null to parameter #1 ($datetime) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: DateTime::__construct(): Passing null to parameter #1 ($datetime) of type string is deprecated at C:\\xampp\\htdocs\\Web\\vendor\\monolog\\monolog\\src\\Monolog\\Logger.php:324)"} []
[2023-04-11 22:58:34] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2023-04-11 22:58:34] php.INFO: Deprecated: DateTime::__construct(): Passing null to parameter #1 ($datetime) of type string is deprecated {"exception":"[object] (ErrorException(code: 0): Deprecated: DateTime::__construct(): Passing null to parameter #1 ($datetime) of type string is deprecated at C:\\xampp\\htdocs\\Web\\vendor\\monolog\\monolog\\src\\Monolog\\Logger.php:324)"} []
[2023-04-11 22:58:34] request.CRITICAL: Uncaught PHP Exception ReflectionException: "Class "App\Entity\Publicity" does not exist" at C:\xampp\htdocs\Web\vendor\doctrine\persistence\lib\Doctrine\Persistence\AbstractManagerRegistry.php line 167 {"exception":"[object] (ReflectionException(code: -1): Class \"App\\Entity\\Publicity\" does not exist at C:\\xampp\\htdocs\\Web\\vendor\\doctrine\\persistence\\lib\\Doctrine\\Persistence\\AbstractManagerRegistry.php:167)"} []
